#+STARTUP: overview
#+FILETAGS: :system:




#+title:System
#+PROPERTY: header-args :results none


Installation process of fundamental applications for Debian-based distros, in sequential order.


* Distro
** References
*** Arch

- https://github.com/radstevee/dotfiles


** Booting Linux
*** Creating the drive partition
**** Securing the space
**** Creating the partition
*** Creating a live USB
*** Disabling UEFI Secure Boot
*** Booting from the live USB
*** Creating the distribution's drive partitions


** Ubuntu 22.04
** WSL 2
*** Install

#+begin_src powershell

wsl --install

#+end_src

*** Distro

Install from Microsoft Store.

*** X server
**** Install VcXsrv

Available from [[https://sourceforge.net/projects/vcxsrv/][Sourceforge]].

**** Allow VcXsrv through the Windows Defender Firewall

1. Open the *Windows Defender Firewall* section of the Control Panel
2. Click on *Advanced Settings*, among the hyperlinks on the left side of the screen
3. Select *Inbound Rules*
4. Find the rules named *VcXsrv windows xserver*
5. For each of the rules, right click to open their context menu, and select *Properties*
6. In the *Action* section, tick *Allow the connection*

*** Debugging
**** Low DPI

Set up VcXsrv so applications can *Override high DPI scaling behavior*. From [[https://superuser.com/a/1370548][Biswapriyo in StackOverflow]].

1. Go to the installation directory of VcXsrv and find *vcxsrv.exe*
2. Close any running instance of the X server
3. Right click *vcxsrv.exe*, and choose *Properties* in the context menu
4. Navigate to the *Compatibility* tab
5. Click on the button labeled *Change high DPI settings*
6. Tick the box at the bottom of the following pop up, labeled /Override high DPI scaling behavior. Scaling performed by:/, and select *Application* in the drop-down menu
7. Export the following variables in the shell

#+begin_src shell

export GDK_SCALE=0.5
export GDK_DPI_SCALE=1

#+end_src

**** No internet connection

Restart IP configuration. From [[https://stackoverflow.com/a/63578387][Sam in StackOverflow]].

#+begin_src cmd

netsh winsock reset 
netsh int ip reset all
netsh winhttp reset proxy
ipconfig /flushdns

#+end_src


* C
** Compiler
*** gcc

#+begin_src shell

sudo apt install build-essential
gcc --version

#+end_src

* Python

#+begin_src shell

sudo apt install software-properties-common
sudo add-apt-repository ppa:deadsnakes/ppa
sudo apt install python3.<version>

#+end_src

** poetry

#+begin_src shell

sudo apt install python3-venv
curl -sSL https://install.python-poetry.org | python3 -
export PATH="/home/antonio/.local/bin:$PATH"

#+end_src


* Emacs
** Install
*** Latest

#+begin_src shell

sudo add-apt-repository ppa:ubuntu-elisp/ppa
sudo apt-get update
sudo apt install emacs-snapshot

#+end_src

*** Specific version

#+begin_src shell

sudo add-apt-repository ppa:kelleyk/emacs
sudo apt-get update
sudo apt install emacs<version>

#+end_src

*** Uninstall

#+begin_src shell

sudo apt-get remove emacs<version>

#+end_src

*** Default command

#+begin_src shell

sudo update-alternatives --config emacs

#+end_src

** Local config

#+begin_src emacs-lisp
;; local emacs config

(setq config "home")

(setq home "/mnt/e/")

(setq startup-buffers
      (list (concat home "studio/backlog.org")
	    (concat home "studio/professional/work/DFKI/repos/hopping_leg/backlog.org")))


;; org-agenda
(setq org-agenda-files (list (concat home "studio/contacts.org")
			     (concat home "studio/professional/work/DFKI/repos/hopping_leg/backlog.org")))

;; org-contacts
(setq org-contacts-files (list (concat home "studio/contacts.org")))

;; org-roam directory
(setq org-roam-directory (concat home "home/roam"))

;; org-diary directory
(setq custom/org-diary-directory (concat home "home/journal/diary/"))


;; projectile
(setq projectile-project-search-path (list (concat home "studio/")
				           (concat home "home/")))

#+end_src

** Typefaces

#+begin_src emacs-lisp

(all-the-icons-install-fonts)

#+end_src


* Git

#+begin_src shell

sudo add-apt-repository ppa:git-core/ppa -y
sudo apt-get update
sudo apt-get install git -y
git --version

#+end_src

** user

#+begin_src emacs-lisp

git config --global user.name <name>
git config --global user.email <email>

#+end_src

** merge strategy

#+begin_src shell

git config --global pull.rebase false

#+end_src

** git-subrepo

#+begin_src shell

git clone https://github.com/ingydotnet/git-subrepo ~/git-subrepo
echo 'source ~/git-subrepo/.rc' >> ~/.bashrc

#+end_src

* LaTeX

TeX Live installation process using Debian packages.

Vanilla install:
- https://tex.stackexchange.com/questions/38978/how-can-i-manually-install-a-latex-package-debian-ubuntu-linux
- https://tex.stackexchange.com/questions/1092/how-to-install-vanilla-texlive-on-debian-or-ubuntu

** TeX
*** Debian

#+begin_src shell

sudo apt install texlive

#+end_src

*** XeTeX

#+begin_src shell

sudo apt install texlive-xetex

#+end_src

*** LuaTeX

#+begin_src shell

sudo apt install texlive-luatex

#+end_src

** biber

#+begin_src shell

sudo apt install biber

#+end_src

** latexmk

#+begin_src shell

sudo apt-get install latexmk

#+end_src

** Packages
*** General

#+begin_src shell

# org-mode latex previews
sudo apt install texlive-plain-generic

#+end_src

*** Typefaces

#+begin_src shell

# fontawesome5 and other fonts
sudo apt install texlive-fonts-extra

# sphinx
sudo apt install texlive-fonts-extra-links

#+end_src

*** Typesetting

#+begin_src shell

# mathematics
sudo apt install texlive-science

# coffins
sudo apt install texlive-latex-recommended

#+end_src

*** Bibliography

#+begin_src shell

sudo apt install texlive-bibtex-extra

#+end_src

* Drawio

#+begin_src shell

curl -s https://api.github.com/repos/jgraph/drawio-desktop/releases/latest | grep browser_download_url | grep '\.deb' | cut -d '"' -f 4 | wget -i -
sudo apt -f install ./drawio-amd64-*.deb

#+end_src


* TODO Sphinx

- python3-sphinx version <4 (master_doc vs root_doc issue)
   - seems to work in GitHub actions with Ubuntu 18, installing with pip

#+begin_src shell

sudo apt install python3-sphinx

# LaTeX
sudo apt install texlive-fonts-extra-links

# themes
pip install sphinx-rtd-theme

#+end_src

** LaTeX

LaTeX dependency install using Debian packages.

#+begin_src shell

# luatex
sudo apt install texlive-luatex

# typefaces
sudo apt install texlive-fonts-extra-links

#+end_src

** better-apidoc

#+begin_src shell

pip install better-apidoc

#+end_src

