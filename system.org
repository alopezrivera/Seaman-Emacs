#+STARTUP: overview
#+FILETAGS: :system:




#+title:System
#+PROPERTY: header-args :results none


Installation process of fundamental applications for Debian-based distros, in sequential order.


* Linux
** Platform

Linux may be run as the OS of the machine or using the Windows Subsystem
for Linux.

*** WSL 2
**** Install

#+begin_src powershell

wsl --install

#+end_src

**** Distro

Install from Microsoft Store.

**** X server
***** Install VcXsrv

Available from [[https://sourceforge.net/projects/vcxsrv/][Sourceforge]].

***** Allow VcXsrv through the Windows Defender Firewall

1. Open the *Windows Defender Firewall* section of the Control Panel
2. Click on *Advanced Settings*, among the hyperlinks on the left side of the screen
3. Select *Inbound Rules*
4. Find the rules named *VcXsrv windows xserver*
5. For each of the rules, right click to open their context menu, and select *Properties*
6. In the *Action* section, tick *Allow the connection*

**** Debugging
***** Low DPI

*SOLUTION:* Set up VcXsrv so applications can *Override high DPI scaling behavior*. From [[https://superuser.com/a/1370548][Biswapriyo in StackOverflow]].

1. Go to the installation directory of VcXsrv and find *vcxsrv.exe*
2. Close any running instance of the X server
3. Right click *vcxsrv.exe*, and choose *Properties* in the context menu
4. Navigate to the *Compatibility* tab
5. Click on the button labeled *Change high DPI settings*
6. Tick the box at the bottom of the following pop up, labeled /Override high DPI scaling behavior. Scaling performed by:/, and select *Application* in the drop-down menu
7. Export the following variables in the shell

#+begin_src shell

export GDK_SCALE=0.5
export GDK_DPI_SCALE=1

#+end_src

***** No internet connection

*SOLUTION:* Restart IP configuration.

#+begin_src cmd

netsh winsock reset 
netsh int ip reset all
netsh winhttp reset proxy
ipconfig /flushdns

#+end_src

-----
References:

- [[https://stackoverflow.com/a/63578387][Sam, Answer to "No internet connection on WSL Ubuntu (Windows Subsystem for Linux)," StackOverflow]]

*** Migrating
**** Creating a drive partition

*Disk Management*

The Disk Management application displays a menu with the system's drives.

To create a partition, right click on the drive you wish to partition and
select *shrink* in the context menu. The tool will evaluate the space available
for a new partition.

There are chances that the *available space for the partition is very low* in
relation with the free space in the drive. There are three main causes for
this:

1. Virtual Memory, responsible for the page/swap/paging file
2. System Restore
3. Hybernation

***** Increasing the space available for the partition
****** Turn off Virtual Memory

1. Control Panel > All Control Panel Items > System
2. Advanced system settings
3. Performance > Settings
4. Advanced > Virtual Memory > Change
5. Un-check *Automatically manage paging file for all drives*
6. Select *No paging file*
7. Click *Set*
8. Click *Ok*
9. Restart

-----
References:

- [[https://superuser.com/a/1086485][Fazer87, Answer to "How can I increase my shrink space in disk management?", SuperUser]]

****** Turn off System Restore

1. Control Panel > System and Security > System
2. Advanced system settings
3. System Protection > Protection Settings
4. Select your drive of choice
5. Click *Configure*
6. Turn off *Protection*
7. Click *Ok*
8. Restart

-----
References:

- [[https://superuser.com/a/983965][Stewart, Answer to "How can I increase my shrink space in disk management?", SuperUser]]

****** Turn off Hybernation

#+begin_src cmd

powercfg -h off

#+end_src

-----
References:

- [[https://superuser.com/a/1529511][SolidSloth, Answer to "How can I increase my shrink space in disk management?", StackOverflow]]

**** Creating a live USB

Tutorials easily available using Rufus or other tools.

**** Disabling UEFI Secure Boot

To boot from a live USB you may need to disable UEFI Secure Boot
from within the system's BIOS.

***** HP

In the case of HP machines, this may be done by

1. Connect the live USB to the machine
2. Restart
3. Press ESC until the BIOS menu appears
4. Press F9 to access the boot configuration
5. Advanced > Configure Legacy Support and Secure Boot > *Legacy Support Enable and Secure Boot Disable*
6. Save settings and proceed to boot

**** Changing the boot order

It may be preferable to change the boot order to make your Linux distro
your system's default OS.

***** HP

In the case of HP machines the boot order may be changed as follows.

1. Connect the live USB to the machine
2. Restart
3. Press ESC until the BIOS menu appears
4. Press F9 to access the boot configuration
5. Advanced > Scroll down to Legacy Boot Order
6. *Check Legacy Boot Order*
7. *Click on Legacy Boot Order*
8. Modify boot order as desired
9. Save settings and proceed to boot

**** Booting from the live USB

Restart the machine. A boot menu will appear including the option to boot
from the live USB. Choose this option and proceed to distro installation.

** Distro
*** Arch

- https://github.com/radstevee/dotfiles

*** Ubuntu
**** Drive partitions

-----
References:

- [[https://askubuntu.com/questions/343268/how-to-use-manual-partitioning-during-installation][Community Wiki, AskUbuntu]]

**** Debugging
***** FireFox stops working

With a *'BadAlloc'* error. Error trace similar to the one below. The cause of the error
is the default Noveau GPU driver.

#+begin_src shell

(firefox:60465): Gdk-WARNING **: 18:42:01.096: The program 'firefox' received an X Window System error.
This probably reflects a bug in the program.
The error was 'BadAlloc'.

#+end_src

*SOLUTION:* Switch from the Nouveau display driver from ~xserver-xorg-video-nouveau~
to the ~nvidia-driver-XXX~ driver using the *Additional Drivers* application.

** Desktop environment
*** GNOME
**** Settings
***** IBus

~C-;~ and ~C-.~ are reserved by GNOME as /emoji annotation shortcuts/. To undo this,

1. run ~ibus-setup~ in the terminal
2. Emoji > Emoji Annotation > ... > Delete
3. Repeat for ~C-.~


* C compiler
** gcc

#+begin_src shell

sudo apt install build-essential
gcc --version

#+end_src


* Software
** Emacs
*** Install
**** Latest

#+begin_src shell

sudo add-apt-repository ppa:ubuntu-elisp/ppa
sudo apt-get update
sudo apt install emacs-snapshot

#+end_src

**** Specific version

#+begin_src shell

sudo add-apt-repository ppa:kelleyk/emacs
sudo apt-get update
sudo apt install emacs<version>

#+end_src

**** Uninstall

#+begin_src shell

sudo apt-get remove emacs<version>

#+end_src

**** Default command

#+begin_src shell

sudo update-alternatives --config emacs

#+end_src

*** Typefaces

#+begin_src emacs-lisp

(all-the-icons-install-fonts)

#+end_src

*** Local config
**** Default

#+begin_src emacs-lisp
;; local emacs config

(setq config "home")

(setq home "/mnt/e/")

(setq startup-buffers
      (list (concat home "studio/backlog.org")
	    (concat home "studio/professional/work/DFKI/repos/hopping_leg/backlog.org")))


;; org-agenda
(setq org-agenda-files (list (concat home "studio/contacts.org")
			     (concat home "studio/professional/work/DFKI/repos/hopping_leg/backlog.org")))

;; org-contacts
(setq org-contacts-files (list (concat home "studio/contacts.org")))

;; org-roam directory
(setq org-roam-directory (concat home "home/roam"))

;; org-diary directory
(setq custom/org-diary-directory (concat home "home/journal/diary/"))


;; projectile
(setq projectile-project-search-path (list (concat home "studio/")
				           (concat home "home/")))

#+end_src

**** Default directories

#+begin_src emacs-lisp

;; prevent Emacs from dabbling inside /mnt/c/WINDOWS/system32/
(setq default-directory "/tmp/")
(setq command-line-default-directory "/tmp/")

#+end_src

**** Restricted file search

#+begin_src emacs-lisp

;; sudo find-file
(defun sudo-find-file (orig-fun FILENAME &optional WILDCARDS)
  (condition-case nil
    (funcall orig-fun FILENAME WILDCARDS)
    (error (funcall orig-fun (concat "/sudo::" FILENAME) WILDCARDS))))
(advice-add 'find-file :around #'sudo-find-file)

#+end_src


** Git

#+begin_src shell

sudo add-apt-repository ppa:git-core/ppa -y
sudo apt-get update
sudo apt-get install git -y
git --version

#+end_src

*** user

#+begin_src emacs-lisp

git config --global user.name <name>
git config --global user.email <email>

#+end_src

*** merge strategy

#+begin_src shell

git config --global pull.rebase false

#+end_src

*** git-subrepo

#+begin_src shell

git clone https://github.com/ingydotnet/git-subrepo ~/git-subrepo
echo 'source ~/git-subrepo/.rc' >> ~/.bashrc

#+end_src


** LaTeX

TeX Live installation process using Debian packages.

Vanilla install:
- https://tex.stackexchange.com/questions/38978/how-can-i-manually-install-a-latex-package-debian-ubuntu-linux
- https://tex.stackexchange.com/questions/1092/how-to-install-vanilla-texlive-on-debian-or-ubuntu

*** TeX
**** TeX Live

#+begin_src shell

sudo apt install texlive

#+end_src

**** XeTeX

#+begin_src shell

sudo apt install texlive-xetex

#+end_src

**** LuaTeX

#+begin_src shell

sudo apt install texlive-luatex

#+end_src

*** biber

#+begin_src shell

sudo apt install biber

#+end_src

*** latexmk

#+begin_src shell

sudo apt-get install latexmk

#+end_src

*** Packages
**** General

#+begin_src shell

# org-mode latex previews
sudo apt install texlive-plain-generic

#+end_src

**** Typefaces

#+begin_src shell

# fontawesome5 and other fonts
sudo apt install texlive-fonts-extra

# sphinx
sudo apt install texlive-fonts-extra-links

#+end_src

**** Typesetting

#+begin_src shell

# mathematics
sudo apt install texlive-science

# coffins
sudo apt install texlive-latex-recommended

#+end_src

**** Bibliography

#+begin_src shell

sudo apt install texlive-bibtex-extra

#+end_src

** Python

#+begin_src shell

sudo apt install software-properties-common
sudo add-apt-repository ppa:deadsnakes/ppa
sudo apt install python3.<version>

#+end_src

*** poetry

#+begin_src shell

sudo apt install python3-venv
curl -sSL https://install.python-poetry.org | python3 -
export PATH="/home/antonio/.local/bin:$PATH"

#+end_src

*** TODO sphinx

- python3-sphinx version <4 (master_doc vs root_doc issue)
   - seems to work in GitHub actions with Ubuntu 18, installing with pip

#+begin_src shell

sudo apt install python3-sphinx

# LaTeX
sudo apt install texlive-fonts-extra-links

# themes
pip install sphinx-rtd-theme

#+end_src

**** LaTeX

LaTeX dependency install using Debian packages.

#+begin_src shell

# luatex
sudo apt install texlive-luatex

# typefaces
sudo apt install texlive-fonts-extra-links

#+end_src

**** better-apidoc

#+begin_src shell

pip install better-apidoc

#+end_src


** Drawio

#+begin_src shell

curl -s https://api.github.com/repos/jgraph/drawio-desktop/releases/latest | grep browser_download_url | grep '\.deb' | cut -d '"' -f 4 | wget -i -
sudo apt -f install ./drawio-amd64-*.deb

#+end_src


** ffmpeg

#+begin_src shell

sudo apt install ffmpeg

#+end_src

** okular

#+begin_src shell

sudo apt install okular

#+end_src


* Services
** systemd

- References
   - https://unix.stackexchange.com/a/479766
   - https://jdebp.uk/FGA/systemd-house-of-horror/daemonize.html#first-rule



